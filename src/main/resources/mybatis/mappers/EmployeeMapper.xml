<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hj.ssm.dao.EmployeeMapper">
	<resultMap id="BaseResultMap" type="com.hj.ssm.bean.Employee">
		<id column="emp_id" jdbcType="INTEGER" property="empId" />
		<result column="emp_name" jdbcType="VARCHAR" property="empName" />
		<result column="gender" jdbcType="CHAR" property="gender" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="dep_id" jdbcType="INTEGER" property="depId" />
	</resultMap>
	<resultMap type="com.hj.ssm.bean.Employee" id="WithDepResultMap">
		<id column="emp_id" jdbcType="INTEGER" property="empId" />
		<result column="emp_name" jdbcType="VARCHAR" property="empName" />
		<result column="gender" jdbcType="CHAR" property="gender" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="dep_id" jdbcType="INTEGER" property="depId" />
		
		<association property="department" javaType="com.hj.ssm.bean.Department">
			<id column="d_id" property="depId"/>
			<result column="dep_name" property="depName"/>
		</association>
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		emp_id, emp_name, gender, email, dep_id
	</sql>
	<sql id="WithDep_Column_List">
		employee.emp_id, employee.emp_name, employee.gender, employee.email, employee.dep_id, department.dep_id d_id, department.dep_name
	</sql>


	<select id="selectByExampleWithDep" resultMap="WithDepResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="WithDep_Column_List" />

		FROM employee LEFT JOIN department ON employee.`dep_id`=department.`dep_id`

		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKeyWithDep" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="WithDep_Column_List" />
		FROM employee LEFT JOIN department ON employee.`dep_id`=department.`dep_id` where emp_id = #{empId,jdbcType=INTEGER}
	</select>
	<select id="selectByExample" parameterType="com.hj.ssm.bean.EmployeeExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from employee
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from employee
		where emp_id = #{empId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from employee
		where emp_id = #{empId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.hj.ssm.bean.EmployeeExample">
		delete from employee
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.hj.ssm.bean.Employee">
		insert into employee (emp_id, emp_name, gender,
		email, dep_id)
		values (#{empId,jdbcType=INTEGER}, #{empName,jdbcType=VARCHAR},
		#{gender,jdbcType=CHAR},
		#{email,jdbcType=VARCHAR}, #{depId,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.hj.ssm.bean.Employee">
		insert into employee
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="empId != null">
				emp_id,
			</if>
			<if test="empName != null">
				emp_name,
			</if>
			<if test="gender != null">
				gender,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="depId != null">
				dep_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="empId != null">
				#{empId,jdbcType=INTEGER},
			</if>
			<if test="empName != null">
				#{empName,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				#{gender,jdbcType=CHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="depId != null">
				#{depId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.hj.ssm.bean.EmployeeExample"
		resultType="java.lang.Long">
		select count(*) from employee
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update employee
		<set>
			<if test="record.empId != null">
				emp_id = #{record.empId,jdbcType=INTEGER},
			</if>
			<if test="record.empName != null">
				emp_name = #{record.empName,jdbcType=VARCHAR},
			</if>
			<if test="record.gender != null">
				gender = #{record.gender,jdbcType=CHAR},
			</if>
			<if test="record.email != null">
				email = #{record.email,jdbcType=VARCHAR},
			</if>
			<if test="record.depId != null">
				dep_id = #{record.depId,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update employee
		set emp_id = #{record.empId,jdbcType=INTEGER},
		emp_name = #{record.empName,jdbcType=VARCHAR},
		gender = #{record.gender,jdbcType=CHAR},
		email = #{record.email,jdbcType=VARCHAR},
		dep_id = #{record.depId,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.hj.ssm.bean.Employee">
		update employee
		<set>
			<if test="empName != null">
				emp_name = #{empName,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				gender = #{gender,jdbcType=CHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="depId != null">
				dep_id = #{depId,jdbcType=INTEGER},
			</if>
		</set>
		where emp_id = #{empId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.hj.ssm.bean.Employee">
		update employee
		set emp_name = #{empName,jdbcType=VARCHAR},
		gender = #{gender,jdbcType=CHAR},
		email = #{email,jdbcType=VARCHAR},
		dep_id = #{depId,jdbcType=INTEGER}
		where emp_id = #{empId,jdbcType=INTEGER}
	</update>
</mapper>